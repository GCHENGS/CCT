<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:CCT.Component.Controls"
                    xmlns:helpers="clr-namespace:CCT.Component.Helpers">

    <!--<Style TargetType="TextBox">
        
    </Style>-->

    <Style x:Key="StandardExtendTextBox" TargetType="{x:Type controls:ExtendTextBox}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Brushes.TextBox.BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderCornerRadius" Value="0"/>
        <Setter Property="IconDirection" Value="Right"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Cursor" Value="IBeam"/>
        <Setter Property="Padding" Value="3,0,0,0"/>
        <Setter Property="FontFamily" Value="{DynamicResource Fonts.Family.Control}"/>
        <Setter Property="FontSize" Value="{DynamicResource Font.Size.Content}"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Margin" Value="4,0"/>
    </Style>

    <Style x:Key="WaterMarkExtendTextBoxCanDel" TargetType="{x:Type controls:ExtendTextBox}" BasedOn="{StaticResource StandardExtendTextBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:ExtendTextBox}">
                    <Border x:Name="border" 
                            CornerRadius="{TemplateBinding BorderCornerRadius}" 
                            Padding="{TemplateBinding BorderCornerRadius,Converter={StaticResource CornerRadiusToThickness}}" 
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColumLeft" Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition x:Name="ColumRight" Width="Auto"/>
                                <ColumnDefinition x:Name="ColumEyes" Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Label x:Name="IconLeft" Grid.Column="0">
                                <Button x:Name="ClearButtonLeft" 
                                    helpers:TextBoxHelper.IsClearButton="True"
                                    Template="{DynamicResource ClearButtonTemplate}"
                                    Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" >
                                    <Image Source="/Resource/Images/clear.png" 
                                           VerticalAlignment="Center" 
                                           HorizontalAlignment="Center" 
                                           Width="11" Height="11">
                                    </Image>
                                </Button>
                            </Label>
                            <ScrollViewer x:Name="PART_ContentHost" 
                                          Padding="0" Margin="0,0,0,2"
                                          VerticalAlignment="Center" 
                                          VerticalContentAlignment="Center"
                                          Focusable="False" Grid.Column="1"
                                          HorizontalScrollBarVisibility="Hidden" 
                                          VerticalScrollBarVisibility="Hidden"
                                          Foreground="{TemplateBinding Foreground}" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            </ScrollViewer>
                            <TextBlock x:Name="WaterMark" 
                                       IsHitTestVisible="False" 
                                       Margin="3 0 0 0" Grid.Column="1"
                                       VerticalAlignment="Center" 
                                       Foreground="#9f9f9f"  
                                       Text="{TemplateBinding WaterMark}"
                                       Visibility="Collapsed">
                            </TextBlock>
                            <Label x:Name="IconRight" Grid.Column="2">
                                <Button x:Name="ClearButtonRight"
                                    helpers:TextBoxHelper.IsClearButton="True"
                                    Template="{DynamicResource ClearButtonTemplate}"  
                                    Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}">
                                    <Image Source="/Resource/Images/clear.png" 
                                           VerticalAlignment="Center" 
                                           HorizontalAlignment="Center" 
                                           Width="11" Height="11">
                                    </Image>
                                </Button>
                            </Label>
                            <Label x:Name="IconEyes" Grid.Column="3">
                                <Button x:Name="EyesButton"
                                    Template="{DynamicResource ClearButtonTemplate}"
                                    Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}">
                                    <Image Source="/Resource/Images/eyes_disabled.png" 
                                           VerticalAlignment="Center" 
                                           HorizontalAlignment="Center" 
                                           Width="11" Height="11">
                                    </Image>
                                </Button>
                            </Label>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IconDirection}" Value="Left">
                            <Setter TargetName="ColumRight" Property="Width" Value="0"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IconDirection}" Value="Right">
                            <Setter TargetName="ColumLeft" Property="Width" Value="0"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPasswordBox}" Value="False">
                            <Setter TargetName="ColumEyes" Property="Width" Value="0"/>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IconDirection}" Value="Left"></Condition>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value=""></Condition>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Visible" TargetName="WaterMark"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="IconLeft"></Setter>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IconDirection}" Value="Right"></Condition>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value=""></Condition>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Visible" TargetName="WaterMark"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="IconRight"></Setter>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IconDirection}" Value="Left"></Condition>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="{x:Null}"></Condition>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Visible" TargetName="WaterMark"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="IconLeft"></Setter>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IconDirection}" Value="Right"></Condition>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="{x:Null}"></Condition>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Visible" TargetName="WaterMark"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="IconRight"></Setter>
                        </MultiDataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource Brushes.TextBox.MouseOver.BorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="WaterMark"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource Brushes.TextBox.MouseOver.BorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="WaterMarkExtendTextBoxCanDelAndSearch" TargetType="{x:Type controls:ExtendTextBox}" BasedOn="{StaticResource StandardExtendTextBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:ExtendTextBox}">
                    <Border x:Name="border" 
                            CornerRadius="{TemplateBinding BorderCornerRadius}" 
                            Padding="{TemplateBinding BorderCornerRadius,Converter={StaticResource CornerRadiusToThickness}}" 
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColumLeft" Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition x:Name="ColumRight" Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Label x:Name="IconLeft" Grid.Column="0">
                                <Button x:Name="ImageButtonLeft" 
                                    helpers:TextBoxHelper.IsClearButton="True"
                                    Template="{DynamicResource ClearButtonTemplate}"
                                    Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" >
                                    <Image Source="/Resource/Images/shanchu.png" 
                                           VerticalAlignment="Center" 
                                           HorizontalAlignment="Center" 
                                           Width="11" Height="11">
                                    </Image>
                                </Button>
                            </Label>
                            <ScrollViewer x:Name="PART_ContentHost" 
                                          VerticalAlignment="Center" 
                                          Focusable="False" Grid.Column="1"
                                          HorizontalScrollBarVisibility="Hidden" 
                                          VerticalScrollBarVisibility="Hidden"
                                          Foreground="{TemplateBinding Foreground}" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            </ScrollViewer>
                            <TextBlock x:Name="WaterMark" 
                                       IsHitTestVisible="False" 
                                       Margin="3 0 0 0" Grid.Column="1"
                                       VerticalAlignment="Center" 
                                       Foreground="#9f9f9f"  
                                       Text="{TemplateBinding WaterMark}"
                                       Visibility="Collapsed">
                            </TextBlock>
                            <Label x:Name="IconRight" Grid.Column="2">
                                <Button x:Name="ImageButtonRight"
                                    helpers:TextBoxHelper.IsClearButton="True"
                                    Template="{DynamicResource ClearButtonTemplate}"
                                    Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}">
                                    <Image Source="/Resource/Images/shanchu.png" 
                                           VerticalAlignment="Center" 
                                           HorizontalAlignment="Center" 
                                           Width="11" Height="11">
                                    </Image>
                                </Button>
                            </Label>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IconDirection}" Value="Left">
                            <Setter TargetName="ColumRight" Property="Width" Value="0"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IconDirection}" Value="Right">
                            <Setter TargetName="ColumLeft" Property="Width" Value="0"/>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IconDirection}" Value="Left"></Condition>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value=""></Condition>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Visible" TargetName="WaterMark"/>
                            <Setter Property="Content" TargetName="IconLeft">
                                <Setter.Value>
                                    <Image Source="/Resource/Images/sousuo.png" 
                                           VerticalAlignment="Center" 
                                           HorizontalAlignment="Center" 
                                           Width="11" Height="11">
                                    </Image>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IconDirection}" Value="Right"></Condition>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value=""></Condition>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Visible" TargetName="WaterMark"/>
                            <Setter Property="Content" TargetName="IconRight">
                                <Setter.Value>
                                    <Image Source="/Resource/Images/sousuo.png" 
                                           VerticalAlignment="Center" 
                                           HorizontalAlignment="Center" 
                                           Width="11" Height="11">
                                    </Image>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IconDirection}" Value="Left"></Condition>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="{x:Null}"></Condition>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Visible" TargetName="WaterMark"/>
                            <Setter Property="Content" TargetName="IconLeft">
                                <Setter.Value>
                                    <Image Source="/Resource/Images/sousuo.png" 
                                           VerticalAlignment="Center" 
                                           HorizontalAlignment="Center" 
                                           Width="11" Height="11">
                                    </Image>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IconDirection}" Value="Right"></Condition>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="{x:Null}"></Condition>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Visible" TargetName="WaterMark"/>
                            <Setter Property="Content" TargetName="IconRight">
                                <Setter.Value>
                                    <Image Source="/Resource/Images/sousuo.png" 
                                           VerticalAlignment="Center" 
                                           HorizontalAlignment="Center" 
                                           Width="11" Height="11">
                                    </Image>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource Brushes.TextBox.MouseOver.BorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="WaterMark"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource Brushes.TextBox.MouseOver.BorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>